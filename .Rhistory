title(main="X vs Y")
dev.off()
pdf(file = "myplot.pdf")
y<-rnorm(100)*x+1.5
plot(x,y)
title(main="X vs Y")
dev.off()
pdf(file = "myplot.pdf")
y<-rnorm(100)*x+1.5
plot(x,y)
title(main="X vs Y")
dev.off()
y<-rnorm(100)+x
plot(x,y)
tiff(file="myplot.tiff")
plot(x,y)
title(main="X vs Y")
dev.off()
tiff("Plot2.tif", res = 300)
plot(x,y)
plot(x,y)
dev.off()
tiff("Plot2.tif", res = 300)
head(x)
head(y)
plot(x,y)
mar(c(2,2,2,2))
dev.off()
tiff("Plot3.tiff", width = 4, height = 4, units = 'in', res = 300)
plot(x, y) # Make plot
dev.off()
tiff("Plot3.tiff", width = 4, height = 4, units = 'in', res = 600)
plot(x, y) # Make plot
dev.off()
png("Plot3.png", width = 4, height = 4, units = 'in', res = 600)
plot(x, y) # Make plot
dev.off()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("munsell")
install.packages("ggplot2")
install.packages("lattice")
swirl()
head(EPA)
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
ppm
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 1000)
hist(ppm, col = "green", breaks = 10)
hist(ppm, col = "green", breaks = 5)
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v=12, lwd=2)
abline(q=12, lwd=4)
abline(h=12, lwd=4)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(pollution$region)
table(pollution$region) -> reg
reg
barplot(reg)
barplot(reg, col = "wheat")
barplot(reg, col = "wheat", mail = "Number of Counties in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
with(pollution, boxplot(pm25~region, col = "red"))
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
subset(pollution, region=="east")->east
head(east)
hist(east$pm25, col = "green")
rug(east$pm25)
hist(subset(pollution, region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, pollution$pm25, col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
subset(pollution, region == "west") -> west
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
window()
windows()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file= "geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed, dist))
text(mean(cars$speed, max(cars$dist), "SWIRL rules!"))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!"))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
boxplot(Life.Exp~region, data=state)
boxplot(Income~region, data=state)
boxplot(Murder~region, data=state)
xyplot(Life.Exp~Income|region, data=state, layout=c(4,1))
View(state)
View(state)
xyplot(Life.Exp~Income|region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm = T)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)"
)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and wind in New York City")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and wind in New York City")
title(main = "Ozone and Wind in New York City")
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may<-airquality[airquality$Month=="5",]
View(may)
View(may)
may <- subset(airquality, Month==5)
?pch
plot(data=may, wind, Ozone, col = "blue", pch =2)
plot(data=may, Wind, Ozone, col = "blue", pch =2)
plot(Wind, Ozone, data=may, col = "blue", pch =2)
View(may)
View(may)
plot(may$Wind, may$Ozone, col = "blue", pch =2)
plot(may$Wind, may$Ozone, col = "blue", pch =17)
plot(may$Wind,may$Ozone,col="blue",pch=17)
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
points(airquality$Wind, airquality$Ozone, type="n")
points(may$Wind,may$Ozone,col="blue",pch=17)
subset(airquality, Month != "5")
subset(airquality, Month != "5") -> notmay
notmay <- subset(airquality, Month != "5")
notmay <- subset(airquality, Month!="5")
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar = c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
0
0;4
0;5;6;;4;3;2
0;5;6;5;4;3;2
0;5;6;5;4;3;2 -> hola
hola
c(1,5,2,5,5,5)
c(1,5,2,5,5,5.2)
exit()
knitr::opts_chunk$set(echo = TRUE)
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
knitr::opts_chunk$set(echo = TRUE)
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
shinyAppDir(
system.file("examples/06_tabsets", package = "shiny"),
options = list(
width = "100%", height = 550
)
)
setwd("C:/Users/Jose Luis Rolando/Dropbox/PhD/R Coursera/Reproducible research/Asg1/RepData_PeerAssessment1")
activity<-read.csv(unz("activity.zip","activity.csv"),header=TRUE)
str(activity)
head(activity)
dat<-as.Date(activity$date)
head(dat)
activity$date<as.Date(activity$date)
activity$date<-as.Date(activity$date)
str(activity)
activity<-read.csv(unz("activity.zip","activity.csv"),header=TRUE)
activity$date<-as.Date(activity$date)
str(activity)
summary(activity$date)
hist(activity$steps)
hist(activity$date)
hist(activity$date)
hist(activity$date, breaks = "days")
hist(activity$date, breaks = "month")
hist(activity$date, breaks = "months")
?tapply
activity.day<-tapply(activity$steps,activity$date, sum, na.rm=TRUE)
hist(activity.day)
mean(activity.day)
median(activity.day)
hist(activity.day, main="Histogram of steps of steps per day", xlab = "Number of steps")
hist(activity.day, main="Histogram of steps per day", xlab = "Number of steps")
hist(activity.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Number of days")
mean(activity.day)
median(activity.day)
str(activity)
str(activity$interval)
activity$interval<- as.factor(activity$interval)
act.int<-tapply(activity$steps,activity$interval,mean, na.rm=TRUE)
activity<-read.csv(unz("activity.zip","activity.csv"),header=TRUE)
activity$date<-as.Date(activity$date)
activity.day<-tapply(activity$steps,activity$date, sum, na.rm=TRUE)
hist(activity.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days")
mean(activity.day)
median(activity.day)
act.int<-tapply(activity$steps,activity$interval,mean, na.rm=TRUE)
plot(unique(activity$interval),act.int, type="l")
max(act.int)
maximum<-act.int==max(act.int)
maximum
sum(maximum)
maximum[TRUE]
maximum[maximum==TRUE]
activity<-read.csv(unz("activity.zip","activity.csv"),header=TRUE)
activity$date<-as.Date(activity$date)
activity.day<-tapply(activity$steps,activity$date, sum, na.rm=TRUE)
hist(activity.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days")
mean(activity.day)
median(activity.day)
act.int<-tapply(activity$steps,activity$interval,mean, na.rm=TRUE)
plot(unique(activity$interval),act.int, type="l")
maximum<-act.int==max(act.int)
maximum[maximum==TRUE]
name(maximum[maximum==TRUE])
names(maximum[maximum==TRUE])
names(maximum==TRUE)
maximum[
names(maximum[maximum==TRUE])
)
names(maximum[maximum==TRUE])
suma(is.na(activity$steps))
sum(is.na(activity$steps))
length(activity$steps)
activity$steps[1]==NA
activity$steps[2]==NA
is.NA(activity$steps[1])==TRUE
is.na(activity$steps[1])==TRUE
for(i in 1:length(activity$steps)) {
if is.na(activity$steps[i])==TRUE {
activity$steps[i] <- mean(activity$steps[activity$interval==activity$interval[i],])
}
else next()
}
mean(activity$steps[activity$interval==activity$interval[1],])
activity$steps[activity$interval==activity$interval[1],]
activity$interval==activity$interval[1]
sum(activity$interval==activity$interval[1])
activity$steps[activity$interval==activity$interval[1]]
mean(activity$steps[activity$interval==activity$interval[1]],na.rm=T)
for(i in 1:length(activity$steps)) {
if (is.na(activity$steps[i])==TRUE) {
activity$steps[i] <- mean(activity$steps[activity$interval==activity$interval[i],], na.rm=T)
}
else next()
}
for(i in 1:length(activity$steps)) {
if (is.na(activity$steps[i])==TRUE) {
activity$steps[i] <- mean(activity$steps[activity$interval==activity$interval[i]], na.rm=T)
}
else next()
}
head(activity)
sum(is.na(activity$steps))
activity<-read.csv(unz("activity.zip","activity.csv"),header=TRUE)
activity$date<-as.Date(activity$date)
activity.day<-tapply(activity$steps,activity$date, sum, na.rm=TRUE)
hist(activity.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days")
mean(activity.day)
median(activity.day)
act.int<-tapply(activity$steps,activity$interval,mean, na.rm=TRUE)
plot(unique(activity$interval),act.int, type="l")
maximum<-act.int==max(act.int)
names(maximum[maximum==TRUE])
sum(is.na(activity$steps))
activity.new<-activity
for(i in 1:length(activity.new$steps)) {
if (is.na(activity.new$steps[i])==TRUE) {
activity.new$steps[i] <- mean(activity.new$steps[activity.new$interval==activity.new$interval[i]], na.rm=T)
}
else next()
}
sum(is.na(activity$steps))
sum(is.na(activity.new$steps))
act.new.day<-tapply(activity$steps,activity$date, sum, na.rm=TRUE)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days")
mean(act.new.day)
median(ac.new.day)
median(act.new.day)
?weekdays
weekdays(activity.new$date)
activity.new$weekday<-weekdays(activity.new)
activity.new$weekday<-weekdays(activity.new$date)
?sapply
activity.new$day<-as.character()
activity.new$day<-character()
activity.new$day<-character(length = 17568)
head(activity.new)
activity.new$day<-weekdays(activity.new$date)
activity.new$weekday<-character(length = 17568)
head(activity.new)
activity.new$day[1] == "Saturday" | "Sunday")
(activity.new$day[1] == "Saturday" | activity.new$day[1] == "Sunday")
(activity.new$day[1] == "Monday" | activity.new$day[1] == "Sunday")
for (i in 1:length(activity.new$day)) {
if (activity.new$day[i] == "Saturday" | activity.new$day[i] == "Sunday") {
activity.new$weekday[i] <- "Weekend"
}
else {
activity.new$weekday[i] <- "Weekday"
}
}
head(activity.new)
library(ggplot2)
g<-ggplot(activity.new, aes(interval, steps))
g+geom_line()+theme_bw()+facet_grid(. ~ weekday)
?subset
weekend<-subset(activity.new, weekday=="Weekend")
weekday<-subset(activity.new, weekday=="Weekday")
weekend<-subset(activity.new, weekday=="Weekend")
weekend.int<-tapply(weekend$steps,weekend$interval, mean)
weekday<-subset(activity.new, weekday=="Weekday")
weekday.int<-tapply(weekday$steps,weekday$interval, mean)
as.data.frame(weekday.int)
as.data.frame(c(weekday.int,weekend.int))
as.data.frame(weekday.int,weekend.int)
activity.weekday<-as.data.frame(weekday.int)
activity.weekday$weekend<-as.data.frame(weekend.int)
activity.weekday
colnames(activity.weekday)<-c("Weekday","Weekend")
head(activity.weekday)
colnames(activity.weekday)
head(activity.weekday)
str(activity.weekday)
activity.weekday<-as.data.frame(weekday.int)
str(activity.weekday)
str(activity.new)
activity.weekday<-as.numeric(weekday.int)
activity.weekday$weekend<-as.numeric(weekend.int)
colnames(activity.weekday)<-c("Weekday","Weekend")
activity.weekday<-as.numeric(weekday.int)
activity.weekday<-as.numeric(weekday.int)
activity.weekday<-as.data.frame(activity.weekday)
activity.weekday$weekend<-as.numeric(weekend.int)
colnames(activity.weekday)<-c("Weekday","Weekend")
head(activity.weekday)
activity.weekday$interval<-unique(activity.new$interval)
colnames(activity.weekday)<-c("Weekday","Weekend","Interval")
head(activity.weekday)
activity.weekday<-as.numeric(weekday.int)
activity.weekday<-as.data.frame(activity.weekday)
activity.weekday$day<-"Weekday"
head(activity.weekday)
weekend<-subset(activity.new, weekday=="Weekend")
weekend.int<-tapply(weekend$steps,weekend$interval, mean)
weekend.int<-as.numeric(weekend.int)
weekend.int$day<-"Weekend"
weekend<-subset(activity.new, weekday=="Weekend")
weekend.int<-tapply(weekend$steps,weekend$interval, mean)
weekend.int<-as.numeric(weekend.int)
weekend.int<-as.data.frame(weekend.int)
weekend.int$day<-"Weekend"
weekday<-subset(activity.new, weekday=="Weekday")
weekday.int<-tapply(weekday$steps,weekday$interval, mean)
weekday.int<-as.numeric(weekday.int)
weekday.int<-as.data.frame(weekday.int)
weekday.int$day<-"Weekday"
merge.data.frame(weekday.int,weekend.int)
c(weekday.int,weekend.int)
hola<-c(weekday.int,weekend.int)
str(hola)
weekend<-subset(activity.new, weekday=="Weekend")
weekend.int<-tapply(weekend$steps,weekend$interval, mean)
weekend.int<-as.numeric(weekend.int)
weekday<-subset(activity.new, weekday=="Weekday")
weekday.int<-tapply(weekday$steps,weekday$interval, mean)
weekday.int<-as.numeric(weekday.int)
c(weekend.int,weekday.int)
weekday.int
?character
?rep
rep("Weedend",288)
weekend<-subset(activity.new, weekday=="Weekend")
weekend.int<-tapply(weekend$steps,weekend$interval, mean)
weekend.int<-as.numeric(weekend.int)
weekday<-subset(activity.new, weekday=="Weekday")
weekday.int<-tapply(weekday$steps,weekday$interval, mean)
weekday.int<-as.numeric(weekday.int)
activity.weekday<-as.data.frame()
activity.weekday<-data.frame()
activity.weekday$steps<-c(weekend.int,weekday.int)
?data.frame
activity.weekday<-data.frame(length=576)
activity.weekday$steps<-c(weekend.int,weekday.int)
str(c(weekend.int,weekday.int))
activity.weekday<-data.frame(row.names = 1:576)
activity.weekday$steps<-c(weekend.int,weekday.int)
activity.weekday$day<-c(rep("Weedend",288),rep("Weedday",288))
head(activity.weekday)
activity.weekday$interval<-rep(unique(activity.new$interval),2)
head(activity.weekday)
g<-ggplot(activity.weekday,aes(interval,steps))
g+geom_line()+theme_bw()+facet_grid(.~day)
g+geom_line()+theme_bw()+facet_grid(day~.)
activity<-read.csv(unz("activity.zip","activity.csv"),header=TRUE)
activity$date<-as.Date(activity$date)
activity.day<-tapply(activity$steps,activity$date, sum, na.rm=TRUE)
hist(activity.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days")
mean(activity.day)
median(activity.day)
act.int<-tapply(activity$steps,activity$interval,mean, na.rm=TRUE)
plot(unique(activity$interval),act.int, type="l")
maximum<-act.int==max(act.int)
names(maximum[maximum==TRUE])
sum(is.na(activity$steps))
activity.new<-activity
for(i in 1:length(activity.new$steps)) {
if (is.na(activity.new$steps[i])==TRUE) {
activity.new$steps[i] <- mean(activity.new$steps[activity.new$interval==activity.new$interval[i]], na.rm=T)
}
else next()
}
act.new.day<-tapply(activity.new$steps,activity.new$date, sum, na.rm=TRUE)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days")
mean(act.new.day)
median(act.new.day)
mode(act.new.day)
?mode
median(c(1,2,3,4,5,6,6,6,6))
mean(c(1,2,3,4,5,6,6,6,6))
View(activity)
View(activity)
View(activity.new)
View(activity.new)
activity<-read.csv(unz("activity.zip","activity.csv"),header=TRUE)
activity$date<-as.Date(activity$date)
activity.day<-tapply(activity$steps,activity$date, sum, na.rm=TRUE)
hist(activity.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 100)
hist(activity.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 10)
act.new.day<-tapply(activity.new$steps,activity.new$date, sum, na.rm=TRUE)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 10)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 100)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 1000)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 5)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 6)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 6)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 7)
hist(act.new.day, main="Histogram of steps per day", xlab = "Number of steps",
ylab="Frequency of days", breaks = 10)
